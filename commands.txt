# set environ for local dev
export APP_SETTINGS="config.DevelopmentConfig"
set APP_SETTINGS=config.DevelopmentConfig

# set local db url
export DATABASE_URL="sqlite:///posts.db"

# generate a secret key from shell
import os
os.urandom(24)

# Heroku Configuration Settings
heroku config:set APP_SETTINGS=config.ProductionConfig --remote heroku

# add postgres to heroku production
heroku addons:create heroku-postgresql:hobby-dev

# if need be run this command, not nessasary if first db
heroku pg:promote <DATABASE_URL>

# Heroku Configuration postgres schema Settings
heroku run python db_create.py

# heroku add inserts to database from python shell
heroku run python
from app import db
models import *
db.session.add(BlogPost("Hi", "heroku python shell test"))
db.session.commit()

# login to postgres
psql -U jeff -d test

# change local environment to use postgres  locally
export DATABASE_URL="postgresql://jeff:finn7797@localhost:5432/flask_heroku_jr"
set DATABASE_URL=postgresql://jeff:finn7797@localhost:5432/flask_heroku_jr

#### flask-migrate
## create a new migration db
python manage.py db init

## 2nd step make changes to models.py file and run command to make the migration scripts
python manage.py db migrate

## 3rd step open migration script check to make sure it is all good. then run 
python manage.py db upgrade

## 4th step apply db upgrades to heroku's db
heroku run python manage.py db upgrade

## 5th step get into heroku psql shell and do a manuel update to match local db
heroku pg:psql